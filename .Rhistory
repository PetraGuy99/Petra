theme(axis.text.x = element_text(angle = 45, hjust = 1))
#look at this chart
#explore the total community in all samples
lifestyle_counts <- allfungi %>%
count(lifestyle_counts) %>%
arrange(desc(n))
#look at this chart
#explore the total community in all samples
lifestyle_counts <- fungi.merged %>%
count(lifestyle) %>%
arrange(desc(n))
#look at this chart
#explore the total community in all samples
lifestyle_counts <- allfungi %>%
count(lifestyle) %>%
arrange(desc(n))
ggplot(lifestyle_counts, aes(x = reorder(primary_lifestyle, -n), y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = n), vjust = -0.3) +  # <-- Add labels above bars
labs(title = "Number of Species per Primary Lifestyle",
x = "Primary Lifestyle",
y = "Number of Species") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(lifestyle_counts, aes(x = reorder(lifestyle, -n), y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = n), vjust = -0.3) +  # <-- Add labels above bars
labs(title = "Number of Species per Lifestyle",
x = "Primary Lifestyle",
y = "Number of Species") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data = allfungi[,c(3:7,41:99)] #just the A samples
data = allfungi[,c(3:22,41:99)] #add the pooled and repeat aliquots
data = allfungi[,-c(1:2,100:124)] # everything, roots and rhizo
#make data presence absence
data[data>0] = 1
sac <- specaccum(t(data), method = "random") #transposed here coz vegan is site/spp not spp/site
plot(sac, ci.type="polygon", col="darkgreen", lwd=2, ci.lty=0, ci.col=rgb(0, 0.5, 0, 0.2),
xlab="Number of Samples", ylab="Cumulative Species Richness",
main="Species-Area Curve - every sample")
data1 <- allfungi[, c(3:7, 41:99)]               # A samples
data2 <- allfungi[, c(3:22, 41:99)]              # pooled + repeat aliquots
data3 <- allfungi[, -c(1:2, 100:124)]            # everything (roots and rhizo)
# Make presence/absence
data1[data1 > 0] <- 1
data2[data2 > 0] <- 1
data3[data3 > 0] <- 1
# Calculate SACs (transpose since vegan expects sites as rows)
sac1 <- specaccum(t(data1), method = "random")
sac2 <- specaccum(t(data2), method = "random")
sac3 <- specaccum(t(data3), method = "random")
# Convert each to a dataframe and label
df1 <- data.frame(Samples = sac1$sites, Richness = sac1$richness, SD = sac1$sd, Group = "A samples")
df2 <- data.frame(Samples = sac2$sites, Richness = sac2$richness, SD = sac2$sd, Group = "Pooled + repeats")
df3 <- data.frame(Samples = sac3$sites, Richness = sac3$richness, SD = sac3$sd, Group = "All samples")
# Combine all
sac_df <- bind_rows(df1, df2, df3)
# Plot with ggplot
ggplot(sac_df, aes(x = Samples, y = Richness, color = Group, fill = Group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = Richness - SD, ymax = Richness + SD), alpha = 0.2, colour = NA) +
labs(
x = "Number of Samples",
y = "Cumulative Species Richness",
title = "Species-Area Curve for Different Sample Sets"
) +
theme_minimal() +
theme(
legend.title = element_blank(),
plot.title = element_text(face = "bold")
)
View(sac_df)
emf <- allfungi %>% filter(lifestyle == 'ectomycorrhizal')
# Subsets
emf_soil       <- emf[, c(3:7, 41:99)]
emf_root       <- emf[, c(32:40)]
emf_rhizo      <- emf[, c(23:31)]
emf_rhizo_root <- emf[, c(23:40)]
# Convert to presence/absence
emf_soil[emf_soil > 0]             <- 1
emf_root[emf_root > 0]             <- 1
emf_rhizo[emf_rhizo > 0]           <- 1
emf_rhizo_root[emf_rhizo_root > 0] <- 1
# Calculate species accumulation curves (transpose: sites as rows for vegan)
sac_soil       <- specaccum(t(emf_soil), method = "random")
sac_root       <- specaccum(t(emf_root), method = "random")
sac_rhizo      <- specaccum(t(emf_rhizo), method = "random")
sac_rhizo_root <- specaccum(t(emf_rhizo_root), method = "random")
# Function to tidy the SAC output
sac_to_df <- function(sac_obj, label) {
data.frame(
Sites    = sac_obj$sites,
Richness = sac_obj$richness,
SD       = sac_obj$sd,
Group    = label
)
}
# Combine into one dataframe
df_all <- rbind(
sac_to_df(sac_soil,       "Soil"),
sac_to_df(sac_root,       "Root"),
sac_to_df(sac_rhizo,      "Rhizosphere"),
sac_to_df(sac_rhizo_root, "Rhizo + Root")
)
# Plot
ggplot(df_all, aes(x = Sites, y = Richness, color = Group, fill = Group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = Richness - SD, ymax = Richness + SD), alpha = 0.2, linetype = 0) +
theme_minimal() +
labs(
title = "Species–Area Curves for EMF Guild",
x = "Number of Samples",
y = "Accumulated Species Richness"
) +
theme(
legend.title = element_blank(),
plot.title = element_text(face = "bold")
)
process_sample_group <- function(pooled_cols, single_cols, sample_cols, name) {
# Get pooled and single sample data
pooled_df <- allfungi[, c(1, 2, pooled_cols, 124)]
single_df <- allfungi[, c(1, 2, single_cols, 124)]
# Combine genus and species
pooled_df$species <- paste(pooled_df$GENUS, pooled_df$Species, sep = "_")
single_df$species <- paste(single_df$GENUS, single_df$Species, sep = "_")
# Presence/absence for pooled
pooled_df$pres <- ifelse(pooled_df[[pooled_cols]] > 0, 1, 0)
# Presence/absence for single samples
single_df[sample_cols] <- lapply(single_df[sample_cols], function(x) ifelse(x > 0, 1, 0))
# SAC for single samples
sac <- specaccum(t(single_df[sample_cols]), method = "random")
# Tidy SAC dataframe
sac_df <- data.frame(
Samples = sac$sites,
Richness = sac$richness,
SD = sac$sd,
Group = name
)
# Get unique species lists for Venn
single_sp_df <- cbind(single_df$species, single_df[sample_cols])
single_filtered <- single_sp_df[!apply(single_sp_df[, 2:ncol(single_sp_df)] == 0, 1, all), ]
singles_list <- single_filtered[[1]]
pooled_list <- pooled_df %>% filter(pres == 1) %>% pull(species)
# Return both SAC and species lists
list(sac_df = sac_df,
pooled = pooled_list,
singles = singles_list)
}
#----------------------------
# Define input for each group
#----------------------------
groups <- list(
B1 = list(
pooled_col = "B1",
single_cols = c("A2", "A3", "A4", "A10","A11","A12","A18","A19","A20"),
name = "B1"
),
B2 = list(
pooled_col = "B2",
single_cols = c("A39", "A40", "A33", "A31","A32","A25","A23","A24","A17"),
name = "B2"
),
B3 = list(
pooled_col = "B3",
single_cols = c("A63", "A62", "A57", "A55","A56","A49","A47","A48","A41"),
name = "B3"
)
)
#----------------------------
# Run processing for all groups
#----------------------------
sac_all <- list()
venn_lists <- list()
for (g in names(groups)) {
result <- process_sample_group(
pooled_cols = groups[[g]]$pooled_col,
single_cols = groups[[g]]$single_cols,
sample_cols = groups[[g]]$single_cols,
name = groups[[g]]$name
)
sac_all[[g]] <- result$sac_df
venn_lists[[g]] <- list(Pooled = result$pooled, Singles = result$singles)
}
process_sample_group <- function(pooled_cols, single_cols, sample_cols, name) {
# Get pooled and single sample data
pooled_df <- allfungi[, c(1, 2, pooled_cols, 124)]
single_df <- allfungi[, c(1, 2, single_cols, 124)]
process_sample_group <- function(pooled_cols, single_cols, sample_cols, name) {
# Get pooled and single sample data
pooled_df <- allfungi[, c(1, 2, pooled_cols, 124)]
single_df <- allfungi[, c(1, 2, single_cols, 124)]
# Combine genus and species
pooled_df$species <- paste(pooled_df$GENUS, pooled_df$Species, sep = "_")
single_df$species <- paste(single_df$GENUS, single_df$Species, sep = "_")
# Presence/absence for pooled
pooled_df$pres <- ifelse(pooled_df[[pooled_cols]] > 0, 1, 0)
# Presence/absence for single samples
single_df[sample_cols] <- lapply(single_df[sample_cols], function(x) ifelse(x > 0, 1, 0))
# SAC for single samples
sac <- specaccum(t(single_df[sample_cols]), method = "random")
# Tidy SAC dataframe
sac_df <- data.frame(
Samples = sac$sites,
Richness = sac$richness,
SD = sac$sd,
Group = name
)
# Get unique species lists for Venn
single_sp_df <- cbind(single_df$species, single_df[sample_cols])
single_filtered <- single_sp_df[!apply(single_sp_df[, 2:ncol(single_sp_df)] == 0, 1, all), ]
singles_list <- single_filtered[[1]]
pooled_list <- pooled_df %>% filter(pres == 1) %>% pull(species)
# Return both SAC and species lists
list(sac_df = sac_df,
pooled = pooled_list,
singles = singles_list)
}
groups <- list(
B1 = list(
pooled_col = "B1",
single_cols = c("A2", "A3", "A4", "A10","A11","A12","A18","A19","A20"),
name = "B1"
),
B2 = list(
pooled_col = "B2",
single_cols = c("A39", "A40", "A33", "A31","A32","A25","A23","A24","A17"),
name = "B2"
),
B3 = list(
pooled_col = "B3",
single_cols = c("A63", "A62", "A57", "A55","A56","A49","A47","A48","A41"),
name = "B3"
)
)
#----------------------------
sac_all <- list()
venn_lists <- list()
for (g in names(groups)) {
result <- process_sample_group(
pooled_cols = groups[[g]]$pooled_col,
single_cols = groups[[g]]$single_cols,
sample_cols = groups[[g]]$single_cols,
name = groups[[g]]$name
)
sac_all[[g]] <- result$sac_df
venn_lists[[g]] <- list(Pooled = result$pooled, Singles = result$singles)
}
sac_df_combined <- bind_rows(sac_all)
sac_df_combined <- bind_rows(sac_all)
ggplot(sac_df_combined, aes(x = Samples, y = Richness, color = Group, fill = Group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = Richness - SD, ymax = Richness + SD), alpha = 0.2, linetype = 0) +
theme_minimal() +
labs(
title = "Species-Area Curves for B1–B3 Subsamples",
x = "Number of Samples",
y = "Cumulative Species Richness"
) +
theme(
legend.title = element_blank(),
plot.title = element_text(face = "bold")
)
sac_df_combined <- bind_rows(sac_all)
process_sample_group <- function(pooled_col, single_cols, name) {
# Get pooled and single sample data
pooled_df <- allfungi[, c("GENUS", "Species", pooled_col)]
single_df <- allfungi[, c("GENUS", "Species", single_cols)]
# Combine genus and species
pooled_df$species <- paste(pooled_df$GENUS, pooled_df$Species, sep = "_")
single_df$species <- paste(single_df$GENUS, single_df$Species, sep = "_")
# Presence/absence for pooled
pooled_df$pres <- ifelse(pooled_df[[pooled_col]] > 0, 1, 0)
# Presence/absence for singles
single_df[single_cols] <- lapply(single_df[single_cols], function(x) ifelse(x > 0, 1, 0))
# SAC for single samples
sac <- specaccum(t(single_df[single_cols]), method = "random")
# Tidy SAC dataframe
sac_df <- data.frame(
Samples = sac$sites,
Richness = sac$richness,
SD = sac$sd,
Group = name
)
# Unique species in singles
single_sp_df <- cbind(single_df$species, single_df[single_cols])
single_sp_df <- as.data.frame(single_sp_df)
colnames(single_sp_df)[1] <- "species"
single_sp_df[, -1] <- lapply(single_sp_df[, -1], as.numeric)
single_filtered <- single_sp_df[!apply(single_sp_df[, -1] == 0, 1, all), ]
singles_list <- single_filtered$species
# Unique species in pooled
pooled_list <- pooled_df %>% filter(pres == 1) %>% pull(species)
return(list(
sac_df = sac_df,
pooled = pooled_list,
singles = singles_list
))
}
groups <- list(
B1 = list(
pooled_col = "B1",
single_cols = c("A2", "A3", "A4", "A10","A11","A12","A18","A19","A20")
),
B2 = list(
pooled_col = "B2",
single_cols = c("A39", "A40", "A33", "A31","A32","A25","A23","A24","A17")
),
B3 = list(
pooled_col = "B3",
single_cols = c("A63", "A62", "A57", "A55","A56","A49","A47","A48","A41")
)
)
#----------------------------
# Process each group
sac_all <- list()
venn_lists <- list()
sts <- list()
for (g in names(groups)) {
result <- process_sample_group(
pooled_col = groups[[g]]$pooled_col,
single_cols = groups[[g]]$single_cols,
name = g
)
sac_all[[g]] <- result$sac_df
venn_lists[[g]] <- list(Pooled = result$pooled, Singles = result$singles)
}
sac_df_combined <- bind_rows(sac_all)
ggplot(sac_df_combined, aes(x = Samples, y = Richness, color = Group, fill = Group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = Richness - SD, ymax = Richness + SD), alpha = 0.2, linetype = 0) +
theme_minimal() +
labs(
title = "Species-Area Curves for B1–B3 Subsamples",
x = "Number of Samples",
y = "Cumulative Species Richness"
) +
theme(
legend.title = element_blank(),
plot.title = element_text(face = "bold")
)
abline_data <- lapply(venn_lists, function(x) length(x$Pooled))
abline_df <- data.frame(Group = names(abline_data), Richness = unlist(abline_data))
# Plot with ablines
ggplot(sac_df_combined, aes(x = Samples, y = Richness, color = Group, fill = Group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = Richness - SD, ymax = Richness + SD), alpha = 0.2, linetype = 0) +
geom_hline(data = abline_df, aes(yintercept = Richness, color = Group), linetype = "dashed", size = 1) +
theme_minimal() +
labs(
title = "Species-Area Curves for B1–B3 Subsamples",
x = "Number of Samples",
y = "Cumulative Species Richness"
) +
theme(
legend.title = element_blank(),
plot.title = element_text(face = "bold")
)
View(abline_df)
length(allfungi$B1)
length(allfungi$B1 != 0)
allfungi$B1
b1 = allfungi[,c(1,2,14,124)]
b1 = allfungi[,c(1,2,14,124)]
b1 = allfungi[,c(1,2,14)]
b1_singles = allfungi[,c(1,2,42,43,94,44,45,46,52,53,54)]
#combine genus and species column so can compare
b1$species <- paste(b1$GENUS, b1$Species, sep = "_")
b1_singles$species <- paste(b1_singles$GENUS, b1_singles$Species, sep = "_")
#make pres abs
b1$pres <- ifelse(b1$B1 > 0, 1, 0)
alpha_pooled = sum(b1$pres)
View(abline_df)
b2 = allfungi[,c(1,2,17)]
b2_singles = allfungi[,c(1,2,73,74,67,65,66,59,57,58,51)]
#combine genus and species column so can compare
b2$species <- paste(b2$GENUS, b2$Species, sep = "_")
b2_singles$species <- paste(b2_singles$GENUS, b2_singles$Species, sep = "_")
#make pres abs
b2$pres <- ifelse(b2$B2 > 0, 1, 0)
b2 = allfungi[,c(1,2,17)]
b2_singles = allfungi[,c(1,2,73,74,67,65,66,59,57,58,51)]
#combine genus and species column so can compare
b2$species <- paste(b2$GENUS, b2$Species, sep = "_")
b2_singles$species <- paste(b2_singles$GENUS, b2_singles$Species, sep = "_")
#make pres abs
b2$pres <- ifelse(b2$B2 > 0, 1, 0)
alpha_pooled = sum(b2$pres)
b3 = allfungi[,c(1,2,22)]
b3_singles = allfungi[,c(1,2,6,5,91,89,90,83,81,82,75)]
#combine genus and species column so can compare
b3$species <- paste(b3$GENUS, b3$Species, sep = "_")
b3_singles$species <- paste(b3_singles$GENUS, b3_singles$Species, sep = "_")
#make pres abs
b3$pres <- ifelse(b3$B3 > 0, 1, 0)
cols_to_convert <- c("A63", "A62", "A57", "A55","A56","A49","A47","A48","A41")
b3_singles[cols_to_convert] <- lapply(b3_singles[cols_to_convert], function(x) ifelse(x > 0, 1, 0))
alpha_pooled = sum(b3$pres)
for (g in names(venn_lists)) {
venn.plot <- venn.diagram(
x = venn_lists[[g]],
filename = NULL,
fill = c("skyblue", "lightgreen"),
alpha = 0.5,
cex = 2,
cat.cex = 1.5,
cat.pos = 0,
cat.dist = 0.05,
main = paste("Species Overlap: Pooled vs Singles,", g)
)
grid.newpage()
grid.draw(venn.plot)
}
library(gridExtra)
# Create and store Venn diagram grobs
venn_grobs <- lapply(names(venn_lists), function(g) {
venn.diagram(
x = venn_lists[[g]],
filename = NULL,
fill = c("skyblue", "lightgreen"),
alpha = 0.5,
cex = 2,
cat.cex = 1.5,
cat.pos = 0,
cat.dist = 0.05,
main = paste("Species Overlap: Pooled vs Singles,", g)
)
})
# Draw all Venn diagrams in a grid
grid.newpage()
grid.arrange(grobs = venn_grobs, ncol = 3)
library(gridExtra)
venn_grobs <- lapply(names(venn_lists), function(g) {
venn.diagram(
x = venn_lists[[g]],
filename = NULL,
fill = c("skyblue", "lightgreen"),
alpha = 0.5,
cex = 2,
cat.cex = 1.5,
cat.pos = 0,
cat.dist = 0.05,
main = paste("Species Overlap: Pooled vs Singles,", g)
)
})
# Draw all Venn diagrams in a grid
grid.newpage()
grid.arrange(grobs = venn_grobs, ncol = 3)
library(grid)
# Create and store Venn diagram grobs as proper grobs
venn_grobs <- lapply(names(venn_lists), function(g) {
venn <- venn.diagram(
x = venn_lists[[g]],
filename = NULL,
fill = c("skyblue", "lightgreen"),
alpha = 0.5,
cex = 2,
cat.cex = 1.5,
cat.pos = 0,
cat.dist = 0.05,
main = paste("Species Overlap: Pooled vs Singles,", g)
)
grobTree(venn)  # <— wrap in grobTree to make it compatible
})
grid.newpage()
grid.arrange(grobs = venn_grobs, ncol = 3)
# Plot with ablines
ggplot(sac_df_combined, aes(x = Samples, y = Richness, color = Group, fill = Group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = Richness - SD, ymax = Richness + SD), alpha = 0.2, linetype = 0) +
geom_hline(data = abline_df, aes(yintercept = Richness, color = Group), linetype = "dashed", size = 1) +
theme_minimal() +
labs(
title = "Species-Area Curves for B1–B3 Subsamples",
x = "Number of Samples",
y = "Cumulative Species Richness"
) +
theme(
legend.title = element_blank(),
plot.title = element_text(face = "bold")
)
# Plot with ablines
ggplot(sac_df_combined, aes(x = Samples, y = Richness, color = Group, fill = Group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = Richness - SD, ymax = Richness + SD), alpha = 0.2, linetype = 0) +
geom_hline(data = abline_df, aes(yintercept = Richness, color = Group), linetype = "dashed", size = 1) +
theme_minimal() +
labs(
title = "Species-Area Curves for Pooled/unpooled",
x = "Number of Samples",
y = "Cumulative Species Richness"
) +
theme(
legend.title = element_blank(),
plot.title = element_text(face = "bold")
)
# Plot with ablines
ggplot(sac_df_combined, aes(x = Samples, y = Richness, color = Group, fill = Group)) +
geom_line(size = 1.2) +
geom_ribbon(aes(ymin = Richness - SD, ymax = Richness + SD), alpha = 0.2, linetype = 0) +
geom_hline(data = abline_df, aes(yintercept = Richness, color = Group), linetype = "dashed", size = 1) +
theme_minimal() +
labs(
title = "Species-Area Curves for Pooled/unpooled",
x = "Number of Samples",
y = "Cumulative Species Richness"
) +
theme(
legend.title = element_blank(),
plot.title = element_text(face = "bold")
) +
scale_x_continuous(breaks = scales::pretty_breaks(n = max(sac_df_combined$Samples)))
