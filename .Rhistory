install.packages("rnaturalearthdata")
# Load libraries
library(ggplot2)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
# Get world map data, including the UK
world <- ne_countries(scale = "medium", returnclass = "sf")
polygon <- st_polygon(list(polygon_coords))
polygon_coords <- matrix(c(
-2.3202680, 51.0936780, # SE
-2.321158,51.09239,  # SW
-2.320709,51.093854, # SW
-2.319996 , 51.094244,
-2.3202680, 51.0936780
# Close the polygon
), ncol = 2, byrow = TRUE)
polygon <- st_polygon(list(polygon_coords))
sf_polygon <- st_sfc(polygon, crs = 4326)
# Plot using ggplot2
ggplot(data = world) +
geom_sf() +
geom_sf(data = sf_polygon, fill = "lightblue", color = "blue") +
coord_sf(xlim = c(-6, 2), ylim = c(50, 60)) + # UK bounding box
theme_minimal() +
labs(title = "Polygon around London")
# Polygon coordinates (longitude, latitude) around London
polygon_coords <- matrix(c(
-2.3202680, 51.0936780, # SE
-2.321158,51.09239,  # SW
-2.320709,51.093854, # SW
-2.319996 , 51.094244,
-2.3202680, 51.0936780
# Close the polygon
), ncol = 2, byrow = TRUE)
# Convert to sf polygon object
polygon <- st_polygon(list(polygon_coords))
sf_polygon <- st_sfc(polygon, crs = 4326)
ggplot(data = world) +
geom_sf() +
geom_sf(data = sf_polygon, fill = "lightblue", color = "blue") +
coord_sf(xlim = c(-6, 2), ylim = c(50, 60)) + # UK bounding box
theme_minimal() +
labs(title = "Polygon around London")
polygon_coords <- list(
list(c(-2.3202680, 51.0936780)),  # London
list(c(-2.321158,51.09239)),  # Islington
list(c( -2.320709,51.093854)),
list(c(-2.319996 , 51.094244)),
list(c( -2.3202680, 51.0936780))
)
# Create leaflet map centered in the UK and add polygon
leaflet() %>%
addTiles() %>%
setView(lng = -0.1278, lat = 51.5074, zoom = 10) %>%
addPolygons(
lng = c(-0.1278, -0.1025, -0.1446),
lat = c(51.5074, 51.5155, 51.4954),
color = "blue"
)
leaflet() %>%
addTiles() %>%
setView(lng = -2.3202680, 51.0936780, zoom = 10) %>%
addPolygons(
lng = c(-2.3202680, -2.321158, --2.321158, -2.319996, -2.3202680),
lat = c(51.0936780, 51.09239, 51.093854, 51.094244,51.0936780 ),
color = "blue"
)
# Create leaflet map centered in the UK and add polygon
leaflet() %>%
addTiles() %>%
setView(lng = -2.3202680, 51.0936780, zoom = 10) %>%
addPolygons(
lng = c(-2.3202680, -2.321158, -2.321158, -2.319996, -2.3202680),
lat = c(51.0936780, 51.09239, 51.093854, 51.094244,51.0936780 ),
color = "blue"
)
# Create leaflet map centered in the UK and add polygon
leaflet() %>%
addTiles(
urlTemplate = "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
attribution = 'Map data © <a href="https://openstreetmap.org/copyright">OpenStreetMap</a> contributors'
) %>%
addProviderTiles("OpenStreetMap.Mapnik") %>%
setView(lng = -2.3202680, 51.0936780, zoom = 10) %>%
addPolygons(
lng = c(-2.3202680, -2.321158, -2.321158, -2.319996, -2.3202680),
lat = c(51.0936780, 51.09239, 51.093854, 51.094244,51.0936780 ),
color = "blue"
)
library(leaflet)
#Nick Hoare - Inoculated treatment
leaflet() %>%
addTiles(
urlTemplate = "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
attribution = 'Map data © <a href="https://openstreetmap.org/copyright">OpenStreetMap</a> contributors'
) %>%
addProviderTiles("OpenStreetMap.Mapnik") %>%
setView(lng = -2.3202680, 51.0936780, zoom = 10) %>%
addPolygons(
lng = c(-2.3202680, -2.321158, -2.321158, -2.319996, -2.3202680),
lat = c(51.0936780, 51.09239, 51.093854, 51.094244,51.0936780 ),
color = "blue"
)
leaflet() %>%
addTiles(
urlTemplate = "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
attribution = 'Map data © <a href="https://openstreetmap.org/copyright">OpenStreetMap</a> contributors'
) %>%
addProviderTiles("OpenStreetMap.Mapnik") %>%
setView(lng = -2.3202680, 51.0936780, zoom = 10) %>%
addPolygons(
lng = c(-2.3202680, -2.321158, -2.321158, -2.319996, -2.3202680),
lat = c(51.0936780, 51.09239, 51.093854, 51.094244,51.0936780 ),
color = "blue"
)
setwd('C:/dev/code/Petra')
library(dplyr)
library(ggplot2)
library(readxl)
library(tidyr)
p_abies_T = read_excel('../../data/Forrest_working_Copy.xlsx', sheet = 'P_abies_T')
ggplot(data, aes(x =  tree, y = height, fill = treatment)) +
geom_boxplot() +
labs(title = "Heights at end of first growing season",
x = "Tree species",
y = "Height(cm)",
fill = "Treatment") +
scale_fill_manual(values = c("Control" = "orange", "Pellet" = "darkgreen")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1) )+
theme(
legend.position = "right", # Adjust legend position
axis.text.x = element_text(angle = 45, hjust = 1, size = 14),
axis.text.y = element_text(size = 16),
axis.title.y = element_text(size = 16) ,
axis.title.x = element_text(size = 16) # Adjust x-axis labels
)
library(dplyr)
library(ggplot2)
library(readxl)
library(tidyr)
data = read_excel('../../data/Copy of Forrest Estate Statistics SHeet.xlsx', sheet = 'Combined')
#tidy some colnames
data = data%>%
rename(
height = Height_cm_0,
treatment = Treatment,
tree =  Tree_Species,
rcd = Rcd_mm_0
)
#tidy column text
data$treatment <- ifelse(data$treatment == "Fungi_Treatment", "Pellet",
ifelse(data$treatment == "Fungi_Control", "Control", data$treatment))
#delete NA rows
data = data %>% drop_na(height)
ggplot(data, aes(x =  tree, y = height, fill = treatment)) +
geom_boxplot() +
labs(title = "Heights at end of first growing season",
x = "Tree species",
y = "Height(cm)",
fill = "Treatment") +
scale_fill_manual(values = c("Control" = "orange", "Pellet" = "darkgreen")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1) )+
theme(
legend.position = "right", # Adjust legend position
axis.text.x = element_text(angle = 45, hjust = 1, size = 14),
axis.text.y = element_text(size = 16),
axis.title.y = element_text(size = 16) ,
axis.title.x = element_text(size = 16) # Adjust x-axis labels
)
ggplot(data, aes(x =  tree, y = rcd, fill = treatment)) +
geom_boxplot() +
labs(title = "Root collar diameter at end of first growing season",
x = "Tree species",
y = "Root collar diameter(mm)",
fill = "Treatment") +
scale_fill_manual(values = c("Control" = "orange", "Pellet" = "darkgreen")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1) )+
theme(
legend.position = "right", # Adjust legend position
axis.text.x = element_text(angle = 45, hjust = 1, size = 14),
axis.text.y = element_text(size = 16),
axis.title.y = element_text(size = 16) ,
axis.title.x = element_text(size = 16) # Adjust x-axis labels
)
survival =
data = read_excel('../../data/Copy of Forrest Estate Statistics SHeet.xlsx', sheet = 'survival')
#munge the data - remove cols 2-5
survival.select = survival[-c(2,3,4,5,6)]
#pivot for gg plot
long_data <- survival.select %>%
pivot_longer(cols = c(norm_density, norm_ht, norm_rcd),
names_to = "Measurement",
values_to = "Value")
# Create the bar chart
ggplot(long_data, aes(x = Measurement, y = Value, fill = treatment)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("pellet" = "darkgreen", "control" = "orange")) +
labs(x = "", y = "Normalised values", fill = "Treatment") +
scale_x_discrete(labels = c("norm_density" = "density", "norm_ht" = "height", "norm_rcd" = "rcd"))+
theme(
legend.position = "right", # Adjust legend position
axis.text.x = element_text(angle = 45, hjust = 1, size = 14),
axis.text.y = element_text(size = 16),
axis.title.y = element_text(size = 16) ,
axis.title.x = element_text(size = 16)
)
#...rcd
ggplot(data, aes(x =  tree, y = rcd, fill = treatment)) +
geom_boxplot() +
labs(title = "Root collar diameter at end of first growing season",
x = "Tree species",
y = "Root collar diameter(mm)",
fill = "Treatment") +
scale_fill_manual(values = c("Control" = "orange", "Pellet" = "darkgreen")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1) )+
theme(
legend.position = "right", # Adjust legend position
axis.text.x = element_text(angle = 45, hjust = 1, size = 14),
axis.text.y = element_text(size = 16),
axis.title.y = element_text(size = 16) ,
axis.title.x = element_text(size = 16),
panel.grid.major = element_blank())+
# Adjust x-axis labels
)
#...rcd
ggplot(data, aes(x =  tree, y = rcd, fill = treatment)) +
geom_boxplot() +
labs(title = "Root collar diameter at end of first growing season",
x = "Tree species",
y = "Root collar diameter(mm)",
fill = "Treatment") +
scale_fill_manual(values = c("Control" = "orange", "Pellet" = "darkgreen")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1) )+
theme(
legend.position = "right", # Adjust legend position
axis.text.x = element_text(angle = 45, hjust = 1, size = 14),
axis.text.y = element_text(size = 16),
axis.title.y = element_text(size = 16) ,
axis.title.x = element_text(size = 16),
panel.grid.major = element_blank())
data = data%>%
rename(
height = Height_cm_0,
treatment = Treatment,
tree =  Tree_Species,
rcd = Rcd_mm_0
)
data = read_excel('../../data/Copy of Forrest Estate Statistics SHeet.xlsx', sheet = 'Combined')
#tidy some colnames
data = data%>%
rename(
height = Height_cm_0,
treatment = Treatment,
tree =  Tree_Species,
rcd = Rcd_mm_0
)
#tidy column text
data$treatment <- ifelse(data$treatment == "Fungi_Treatment", "Pellet",
ifelse(data$treatment == "Fungi_Control", "Control", data$treatment))
#delete NA rows
data = data %>% drop_na(height)
survival =
data = read_excel('../../data/Copy of Forrest Estate Statistics SHeet.xlsx', sheet = 'survival')
#munge the data - remove cols 2-5
survival.select = survival[-c(2,3,4,5,6)]
#pivot for gg plot
long_data <- survival.select %>%
pivot_longer(cols = c(norm_density, norm_ht, norm_rcd),
names_to = "Measurement",
values_to = "Value")
# Create the bar chart
ggplot(long_data, aes(x = Measurement, y = Value, fill = treatment)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("pellet" = "darkgreen", "control" = "orange")) +
labs(x = "", y = "Normalised values", fill = "Treatment") +
scale_x_discrete(labels = c("norm_density" = "density", "norm_ht" = "height", "norm_rcd" = "rcd"))+
theme(
legend.position = "right", # Adjust legend position
axis.text.x = element_text(angle = 45, hjust = 1, size = 14),
axis.text.y = element_text(size = 16),
axis.title.y = element_text(size = 16) ,
axis.title.x = element_text(size = 16)
)
# Create the bar chart
ggplot(long_data, aes(x = Measurement, y = Value, fill = treatment)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("pellet" = "darkgreen", "control" = "orange")) +
labs(x = "", y = "Normalised values", fill = "Treatment") +
scale_x_discrete(labels = c("norm_density" = "density", "norm_ht" = "height", "norm_rcd" = "rcd"))+
theme(
legend.position = "right", # Adjust legend position
axis.text.x = element_text(angle = 45, hjust = 1, size = 14),
axis.text.y = element_text(size = 16),
axis.title.y = element_text(size = 16) ,
axis.title.x = element_text(size = 16) +
theme(panel.background = element_blank())
)
# Create the bar chart
ggplot(long_data, aes(x = Measurement, y = Value, fill = treatment)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("pellet" = "darkgreen", "control" = "orange")) +
labs(x = "", y = "Normalised values", fill = "Treatment") +
scale_x_discrete(labels = c("norm_density" = "density", "norm_ht" = "height", "norm_rcd" = "rcd"))+
theme(
legend.position = "right", # Adjust legend position
axis.text.x = element_text(angle = 45, hjust = 1, size = 14),
axis.text.y = element_text(size = 16),
axis.title.y = element_text(size = 16) ,
axis.title.x = element_text(size = 16)
)
# Create the bar chart
ggplot(long_data, aes(x = Measurement, y = Value, fill = treatment)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("pellet" = "darkgreen", "control" = "orange")) +
labs(x = "", y = "Normalised values", fill = "Treatment") +
scale_x_discrete(labels = c("norm_density" = "density", "norm_ht" = "height", "norm_rcd" = "rcd")) +
theme(
legend.position = "right", # Adjust legend position
axis.text.x = element_text(angle = 45, hjust = 1, size = 14),
axis.text.y = element_text(size = 16),
axis.title.y = element_text(size = 16),
axis.title.x = element_text(size = 16),
panel.background = element_rect(fill = "white", colour = NA), # White panel background
plot.background = element_rect(fill = "white", colour = NA),  # White plot background
panel.grid.major = element_blank(), # Remove major grid lines
panel.grid.minor = element_blank()  # Remove minor grid lines
)
#...rcd
ggplot(data, aes(x =  tree, y = rcd, fill = treatment)) +
geom_boxplot() +
labs(title = "Root collar diameter at end of first growing season",
x = "Tree species",
y = "Root collar diameter(mm)",
fill = "Treatment") +
scale_fill_manual(values = c("Control" = "orange", "Pellet" = "darkgreen")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1) )+
theme(
legend.position = "right", # Adjust legend position
axis.text.x = element_text(angle = 45, hjust = 1, size = 14),
axis.text.y = element_text(size = 16),
axis.title.y = element_text(size = 16) ,
axis.title.x = element_text(size = 16),
)
data = read_excel('../../data/Copy of Forrest Estate Statistics SHeet.xlsx', sheet = 'Combined')
#tidy some colnames
data = data%>%
rename(
height = Height_cm_0,
treatment = Treatment,
tree =  Tree_Species,
rcd = Rcd_mm_0
)
#tidy column text
data$treatment <- ifelse(data$treatment == "Fungi_Treatment", "Pellet",
ifelse(data$treatment == "Fungi_Control", "Control", data$treatment))
#delete NA rows
data = data %>% drop_na(height)
#look at quick summary
mean_heights <- data %>%
group_by(treatment, tree) %>%
summarize(
mean_height = mean(height),
mean_rcd = mean(rcd),
.groups = "drop"
)
#boxplots of all the points....heights
ggplot(data, aes(x =  tree, y = height, fill = treatment)) +
geom_boxplot() +
labs(title = "Heights at end of first growing season",
x = "Tree species",
y = "Height(cm)",
fill = "Treatment") +
scale_fill_manual(values = c("Control" = "orange", "Pellet" = "darkgreen")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1) )+
theme(
legend.position = "right", # Adjust legend position
axis.text.x = element_text(angle = 45, hjust = 1, size = 14),
axis.text.y = element_text(size = 16),
axis.title.y = element_text(size = 16) ,
axis.title.x = element_text(size = 16) # Adjust x-axis labels
)
#...rcd
ggplot(data, aes(x =  tree, y = rcd, fill = treatment)) +
geom_boxplot() +
labs(title = "Root collar diameter at end of first growing season",
x = "Tree species",
y = "Root collar diameter(mm)",
fill = "Treatment") +
scale_fill_manual(values = c("Control" = "orange", "Pellet" = "darkgreen")) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1) )+
theme(
legend.position = "right", # Adjust legend position
axis.text.x = element_text(angle = 45, hjust = 1, size = 14),
axis.text.y = element_text(size = 16),
axis.title.y = element_text(size = 16) ,
axis.title.x = element_text(size = 16),
)
View(mean_heights)
View(mean_heights)
View(mean_heights)
##Bar charts
ggplot(mean_heights, aes(x = tree, y = mean_Height, fill = Group)) +
geom_bar(stat = "identity", position = "dodge") +  # Dodge for side-by-side bars
labs(x = "Tree Species", y = "Mean Height (cm)", fill = "Treatment Group") +
theme_minimal() +  # Cleaner theme
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 14)
) +
scale_fill_manual(values = c("Control" = "orange", "Treatment" = "darkgreen"))
##Bar charts
ggplot(mean_heights, aes(x = tree, y = mean_height, fill = Group)) +
geom_bar(stat = "identity", position = "dodge") +  # Dodge for side-by-side bars
labs(x = "Tree Species", y = "Mean Height (cm)", fill = "Treatment Group") +
theme_minimal() +  # Cleaner theme
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 14)
) +
scale_fill_manual(values = c("Control" = "orange", "Treatment" = "darkgreen"))
##Bar charts
ggplot(mean_heights, aes(x = tree, y = mean_height, fill = treatment)) +
geom_bar(stat = "identity", position = "dodge") +  # Dodge for side-by-side bars
labs(x = "Tree Species", y = "Mean Height (cm)", fill = "Treatment Group") +
theme_minimal() +  # Cleaner theme
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 14)
) +
scale_fill_manual(values = c("Control" = "orange", "Treatment" = "darkgreen"))
##Bar charts
ggplot(mean_heights, aes(x = tree, y = mean_height, fill = treatment)) +
geom_bar(stat = "identity", position = "dodge") +  # Dodge for side-by-side bars
labs(x = "Tree Species", y = "Mean Height (cm)", fill = "Treatment Group") +
theme_minimal() +  # Cleaner theme
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 14)
) +
scale_fill_manual(values = c("Control" = "orange", "Pellet" = "darkgreen"))
View(mean_heights)
#change tree species to look neater on chart
mean_heights$tree = c('Norway','Sitka','Scots pine','Norway','Sitka','Scots pine')
##Bar charts
ggplot(mean_heights, aes(x = tree, y = mean_height, fill = treatment)) +
geom_bar(stat = "identity", position = "dodge") +  # Dodge for side-by-side bars
labs(x = "Tree Species", y = "Mean Height (cm)", fill = "Treatment Group") +
theme_minimal() +  # Cleaner theme
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 14)
) +
scale_fill_manual(values = c("Control" = "orange", "Pellet" = "darkgreen"))
View(mean_heights)
View(mean_heights)
mean_heights <- data %>%
group_by(treatment, tree) %>%
summarize(
mean_height = mean(height),
mean_rcd = mean(rcd),
.groups = "drop"
)
View(mean_heights)
View(mean_heights)
ggplot(mean_heights, aes(x = tree, y = mean_rcd, fill = treatment)) +
geom_bar(stat = "identity", position = "dodge") +  # Dodge for side-by-side bars
labs(x = "Tree Species", y = "Mean Height (cm)", fill = "Treatment Group") +
theme_minimal() +  # Cleaner theme
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 14)
) +
scale_fill_manual(values = c("Control" = "orange", "Pellet" = "darkgreen"))
View(mean_heights)
View(mean_heights)
#change tree species to look neater on chart
mean_heights$tree = c('Norway','Sitka','Scots pine','Norway','Sitka','Scots pine')
ggplot(mean_heights, aes(x = tree, y = mean_rcd, fill = treatment)) +
geom_bar(stat = "identity", position = "dodge") +  # Dodge for side-by-side bars
labs(x = "Tree Species", y = "Mean Height (cm)", fill = "Treatment Group") +
theme_minimal() +  # Cleaner theme
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 14)
) +
scale_fill_manual(values = c("Control" = "orange", "Pellet" = "darkgreen"))
ggplot(mean_heights, aes(x = tree, y = mean_rcd, fill = treatment)) +
geom_bar(stat = "identity", position = "dodge") +  # Dodge for side-by-side bars
labs(x = "Tree Species", y = "Mean Root Collar Diameter (mm)", fill = "Treatment Group") +
theme_minimal() +  # Cleaner theme
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 12),
axis.text.y = element_text(size = 12),
axis.title = element_text(size = 14)
) +
scale_fill_manual(values = c("Control" = "orange", "Pellet" = "darkgreen"))
